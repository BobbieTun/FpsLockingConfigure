-- Simple, readable FPS limiter
local FPSLimiter = {
    Config = {
        Enabled = false, -- Must be set to true to activate
        Mode = "Off",   -- "Off", "Low"(5), "Balanced"(20), "High"(60)
        CustomFPS = 30,
        AllowDisable = true
    }
}

-- Apply FPS based on config
function FPSLimiter:Apply()
    if not self.Config.Enabled then 
        setfpscap(60) -- Default when disabled
        return false 
    end
    
    local target = ({
        Off = 0,
        Low = 5,
        Balanced = 20,
        High = 60
    })[self.Config.Mode] or self.Config.CustomFPS
    
    setfpscap(target > 0 and target or 60)
    return true
end

-- Public methods
function FPSLimiter:SetMode(mode)
    if ({Off=1,Low=1,Balanced=1,High=1})[mode] then
        self.Config.Mode = mode
        return self:Apply()
    end
    return false
end

function FPSLimiter:Enable()
    self.Config.Enabled = true
    return self:Apply()
end

function FPSLimiter:Disable()
    if not self.Config.AllowDisable then
        warn("Disable blocked by config!")
        return false
    end
    self.Config.Enabled = false
    return self:Apply()
end

-- Initialize
FPSLimiter:Apply()

return FPSLimiter
